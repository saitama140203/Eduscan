# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name localhost;
    # Tell browsers to redirect to HTTPS
    return 301 https://$host$request_uri;
    }

server {
    # Explicitly listen on IPv4 and IPv6 for SSL traffic on port 443
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name localhost;

    # Absolute paths to the SSL certificate and key
    ssl_certificate /root/projects/Eduscan/nginx/ssl/cert.pem;
    ssl_certificate_key /root/projects/Eduscan/nginx/ssl/key.pem;
    
    # Improve HTTPS security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # Set proxy headers to pass correct information to backend services
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
    # Backend API (port 8000)
    location ~ ^/api/v1/(.*)$ {
        # Specific handling for WebSocket connections
        if ($request_uri ~* "/api/v1/ws") {
            proxy_pass http://127.0.0.1:8000;
            break;
        }
        proxy_pass http://127.0.0.1:8000/api/v1/$1$is_args$args;
    }

    # OMRChecker API (port 8001)
    location ~ ^/api/omr/(.*)$ {
        proxy_pass http://127.0.0.1:8001/api/omr/$1$is_args$args;
    }

    # API Docs (Swagger & ReDoc)
    location /docs {
        proxy_pass http://127.0.0.1:8000/docs;
    }

    location /redoc {
        proxy_pass http://127.0.0.1:8000/redoc;
    }

    # The openapi.json file is requested by the docs pages
    location = /api/v1/openapi.json {
        proxy_pass http://127.0.0.1:8000/api/v1/openapi.json;
    }

    # Location for serving static files (e.g., annotated images)
    location /storage/ {
        alias /var/lib/eduscan/omr/storage/;
        try_files $uri $uri/ =404;
        expires 1y; # Cache static files for a long time
        add_header Cache-Control "public";
    }

    # Next.js Frontend (port 3000)
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_read_timeout 600s;
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
    }

    # Test location
    location /test {
        # Return a simple 200 OK response for testing
        return 200 'Nginx HTTPS is running!';
        add_header Content-Type text/plain;
    }
} 