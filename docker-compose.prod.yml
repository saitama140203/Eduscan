version: '3.8'

services:
  # Nginx Reverse Proxy vá»›i SSL
  nginx:
    image: nginx:alpine
    container_name: eduscan_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - /var/lib/eduscan/uploads:/var/www/uploads:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - eduscan_network

  # Frontend (Next.js) - Production Build
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: eduscan_frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://103.67.199.62
      - NEXT_PUBLIC_BASE_URL=https://103.67.199.62
    expose:
      - "3000"
    restart: unless-stopped
    networks:
      - eduscan_network

  # Backend (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: eduscan_backend
    environment:
      - DATABASE_URL=postgresql://eduscan_user:eduscan_password@postgres:5432/eduscan_db
      - SECRET_KEY=your-super-secret-key-for-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=1440
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - CORS_ORIGINS=https://eduscan.local
      - OMR_API_URL=http://omr_service:8001
      - UPLOAD_DIR=/app/uploads
      - OMR_DATA_DIR=/app/omr
    volumes:
      - /var/lib/eduscan/uploads:/app/uploads
      - /var/lib/eduscan/omr:/app/omr
      - /var/lib/eduscan/backups:/app/backups
    expose:
      - "8000"
    depends_on:
      - postgres
      - omr_service
    restart: unless-stopped
    networks:
      - eduscan_network

  # OMR Service
  omr_service:
    build:
      context: ./OMRChecker
      dockerfile: Dockerfile.prod
    container_name: eduscan_omr
    environment:
      - PYTHONPATH=/app
    volumes:
      - /var/lib/eduscan/uploads:/app/uploads
      - /var/lib/eduscan/omr/models:/app/models
      - /var/lib/eduscan/omr/templates:/app/templates
      - /var/lib/eduscan/omr/scans:/app/scans
      - /var/lib/eduscan/omr/results:/app/answers
    expose:
      - "8001"
    restart: unless-stopped
    networks:
      - eduscan_network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eduscan_postgres
    environment:
      - POSTGRES_DB=eduscan_db
      - POSTGRES_USER=eduscan_user
      - POSTGRES_PASSWORD=eduscan_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - eduscan_network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: eduscan_redis
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - eduscan_network

volumes:
  postgres_data:
  redis_data:

networks:
  eduscan_network:
    driver: bridge 